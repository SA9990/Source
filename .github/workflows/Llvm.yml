name: Kernel Build(LLVM)

on:
  workflow_dispatch:

env:
  TZ: Asia/Kolkata

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4.2.2

      - name: Install Build Dependencies
        run: |
          sudo apt autoremove

          sudo apt install -y \
            git ccache build-essential bc bison flex libssl-dev \
            libncurses-dev liblz4-tool libzstd-dev zstd curl python3 \
            unzip aria2 device-tree-compiler

      - name: Download LLVM Toolchain
        run: |
          TOOLCHAIN_DIR="$HOME/toolchains/llvm"
          mkdir -p "$TOOLCHAIN_DIR"
          cd "$TOOLCHAIN_DIR"
          curl -L \
            https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.5/LLVM-20.1.5-Linux-X64.tar.xz \
            -o llvm.tar.xz
          tar -xf llvm.tar.xz --strip-components=1

      - name: Write IST Build Time to File
        run: |
          mkdir -p out
          IST_TIME=$(date +"%Y-%m-%d %H:%M IST")
          echo "Build Time (IST): $IST_TIME" > out/ist_build_time.txt

      - name: Configure and Build Kernel
        run: |
          export PATH="$HOME/toolchains/llvm/bin:$PATH"
          export KBUILD_BUILD_USER="Shreyash"
          export KBUILD_BUILD_HOST="nand"

          make distclean

          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang \
            AR=llvm-ar \
            NM=llvm-nm \
            OBJCOPY=llvm-objcopy \
            OBJDUMP=llvm-objdump \
            STRIP=llvm-strip \
            READELF=llvm-readelf \
            OBJSIZE=llvm-size \
            LLVM=1 \
            LD=ld.lld \
            LLVM_IAS=1 \
            HOSTCC=clang \
            HOSTCXX=clang++ \
            CROSS_COMPILE=aarch64-linux-gnu- \
            vendor/obiwan_defconfig

          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang \
            AR=llvm-ar \
            NM=llvm-nm \
            OBJCOPY=llvm-objcopy \
            OBJDUMP=llvm-objdump \
            STRIP=llvm-strip \
            READELF=llvm-readelf \
            OBJSIZE=llvm-size \
            LLVM=1 \
            LD=ld.lld \
            LLVM_IAS=1 \
            HOSTCC=clang \
            HOSTCXX=clang++ \
            CROSS_COMPILE=aarch64-linux-gnu-

      - name: Upload .config File
        run: |
          CONFIG_PATH=$(find out/ -name ".config" | head -n 1)
          echo "Found config at: $CONFIG_PATH"
          mkdir -p config_upload
          cp "$CONFIG_PATH" config_upload/kernel.config
        shell: bash

      - name: Upload Kernel .config File Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: KernelConfig
          path: config_upload/kernel.config

      - name: Merge DTBs
        run: |
          find out/arch/arm64/boot/dts/vendor -name '*.dtb' \
            -exec cat {} + > out/arch/arm64/boot/dtb

      - name: Package with AnyKernel3
        run: |
          IST_TIME=$(date +"%Y-%m-%d_%H-%M")
          ZIP_NAME="AK3_obiwan_${IST_TIME}.zip"
          echo "$ZIP_NAME" > zip_name.txt

          git clone https://github.com/SA9990/AK3_obiwan.git

          cp out/arch/arm64/boot/Image AK3_obiwan/
          cp out/arch/arm64/boot/dtb AK3_obiwan/
          find out/ -type f -name "*.ko" \
            -exec cp {} AK3_obiwan/modules/system/lib/modules/ \; || true
          find out/ -type f -name "dtbo.img" \
            -exec cp {} AK3_obiwan/ \; || true

          cd AK3_obiwan
          zip -r9 "../$ZIP_NAME" * -x .git README.md *placeholder

      - name: Upload ZIP to GitHub Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: AnyKernel
          path: "*.zip"
